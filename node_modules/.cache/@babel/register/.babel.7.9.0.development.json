{
  "{\"sourceRoot\":\"/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest\",\"filename\":\"/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest/rxjs_server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest",
      "filename": "/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest/rxjs_server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest/rxjs_server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest/rxjs_server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest/",
        "sourceFileName": "rxjs_server.js"
      }
    },
    "ast": null,
    "code": "/* API IDEAS */\n\n/* \n  - Conectarse al sistema - Servidor asigna numero de jugador\n  - Consultar estado juego - # jugadores conectados [GET] /get-game-status\n\t- Obtener el estado de \"avance\" de los jugadores [GET] /get-states\n\t\t\t[{\"player\": int, \"value\": int}, ...]\n\t- Jugador envﾃｭa su avance cada cierta cantidad de palabras [POST] /set-state\n\t\t\t{\"player\": int, \"value\": int}\n  - \n*/\n\n/*\n\t-Usar alguna API gratuita de quotes\n*/\n\"use strict\"; // Optional. You will see this name in eg. 'ps' or 'top' command\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nprocess.title = 'node-chat'; // Port where we'll run the websocket server\n\nvar webSocketsServerPort = 1338; // websocket and http servers\n\nvar webSocketServer = require('websocket').server;\n\nvar http = require('http');\n/**\n * Global variables\n */\n// latest 100 messages\n\n\nvar history = []; // list of currently connected clients (users)\n\nvar clients = [];\n/**\n * Helper function for escaping input strings\n */\n\nfunction htmlEntities(str) {\n  return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n/* API Function */\n\n\nfunction randomQuote() {\n  return _randomQuote.apply(this, arguments);\n} // Array with some colors\n\n\nfunction _randomQuote() {\n  _randomQuote = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var response, data;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://api.quotable.io/random');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            console.log(\"\".concat(data.content));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _randomQuote.apply(this, arguments);\n}\n\nvar PLAYER_COUNT = 2;\n\nvar playersNumbers = _toConsumableArray(Array(PLAYER_COUNT).keys());\n\nvar pointer = 0;\n/**\n * HTTP server\n */\n\nvar server = http.createServer(function (request, response) {// Not important for us. We're writing WebSocket server, not HTTP server\n});\nserver.listen(webSocketsServerPort, function () {\n  console.log(new Date() + \" Server is listening on port \" + webSocketsServerPort);\n});\n/**\n * WebSocket server\n */\n\nvar wsServer = new webSocketServer({\n  // WebSocket server is tied to a HTTP server. WebSocket request is just\n  // an enhanced HTTP request. For more info http://tools.ietf.org/html/rfc6455#page-6\n  httpServer: server\n}); // This callback function is called every time someone\n// tries to connect to the WebSocket server\n\nwsServer.on('request', function (request) {\n  console.log(new Date() + ' Connection from origin ' + request.origin + '.'); // accept connection - you should check 'request.origin' to make sure that\n  // client is connecting from your website\n  // (http://en.wikipedia.org/wiki/Same_origin_policy)\n\n  var connection = request.accept(null, request.origin); // we need to know client index to remove them on 'close' event\n\n  var index = clients.push(connection) - 1;\n  var userName = false;\n  var userPlayer = false;\n  var sentence = \"Apuesto a que nunca has visto a un burro volar\"; // let sentence = await randomQuote();\n\n  console.log(new Date() + ' Connection accepted.'); // send back chat history\n\n  if (history.length > 0) {\n    connection.sendUTF(JSON.stringify({\n      type: 'history',\n      data: history\n    }));\n  } // user sent some message\n\n\n  connection.on('message', function (message) {\n    if (message.type === 'utf8') {\n      // accept only text\n      if (userName === false) {\n        // first message sent by user is their name\n        // remember user name\n        userName = htmlEntities(message.utf8Data); // get the next player number and send it back to the user\n\n        userPlayer = playersNumbers.shift();\n        connection.sendUTF(JSON.stringify({\n          type: 'player',\n          data: userPlayer\n        }));\n        console.log(new Date() + ' User is known as: ' + userName + ' with player number' + userPlayer); // If all players are connected send \"start game\" message\n\n        if (clients.length === PLAYER_COUNT) {\n          for (var i = 0; i < clients.length; i++) {\n            clients[i].sendUTF(JSON.stringify({\n              type: 'game-beginning',\n              data: sentence\n            }));\n          }\n\n          console.log(new Date() + ' A match is about to start! ' + userName + ' with player number' + userPlayer);\n        }\n      } else {\n        // log and broadcast the message\n        console.log(new Date() + ' Received Message from ' + userName + ': ' + message.utf8Data);\n        var playerProgress = parseInt(htmlEntities(message.utf8Data)); // we want to keep history of all sent messages\n\n        var obj = {\n          time: new Date().getTime(),\n          playerProgress: playerProgress,\n          author: userName,\n          player: userPlayer\n        };\n        history.push(obj);\n        history = history.slice(-100); // broadcast message to all connected clients\n\n        var json = JSON.stringify({\n          type: 'message',\n          data: obj\n        });\n\n        for (var i = 0; i < clients.length; i++) {\n          clients[i].sendUTF(json);\n        } // if player progress exceeds sentence length end game\n\n\n        if (playerProgress > sentence.length) {\n          for (var i = 0; i < clients.length; i++) {\n            clients[i].sendUTF(JSON.stringify({\n              type: 'game-ending',\n              data: {\n                \"player\": userPlayer\n              }\n            }));\n          }\n        }\n      }\n    }\n  }); // user disconnected\n\n  connection.on('close', function (connection) {\n    if (userName !== false && userPlayer !== false) {\n      console.log(new Date() + \" Peer \" + connection.remoteAddress + \" disconnected.\"); // remove user from the list of connected clients\n\n      clients.splice(index, 1); // push back user's number to be reused by another user\n\n      playersNumbers.push(userPlayer);\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "rxjs_server.js"
      ],
      "names": [
        "process",
        "title",
        "webSocketsServerPort",
        "webSocketServer",
        "require",
        "server",
        "http",
        "history",
        "clients",
        "htmlEntities",
        "str",
        "String",
        "replace",
        "randomQuote",
        "fetch",
        "response",
        "json",
        "data",
        "console",
        "log",
        "content",
        "PLAYER_COUNT",
        "playersNumbers",
        "Array",
        "keys",
        "pointer",
        "createServer",
        "request",
        "listen",
        "Date",
        "wsServer",
        "httpServer",
        "on",
        "origin",
        "connection",
        "accept",
        "index",
        "push",
        "userName",
        "userPlayer",
        "sentence",
        "length",
        "sendUTF",
        "JSON",
        "stringify",
        "type",
        "message",
        "utf8Data",
        "shift",
        "i",
        "playerProgress",
        "parseInt",
        "obj",
        "time",
        "getTime",
        "author",
        "player",
        "slice",
        "remoteAddress",
        "splice"
      ],
      "mappings": "AAAA;;AAEA;;;;;;;;;;AAUA;;;AAIA,a,CAEA;;;;;;;;;;;;;;;;;;AACAA,OAAO,CAACC,KAAR,GAAgB,WAAhB,C,CAEA;;AACA,IAAIC,oBAAoB,GAAG,IAA3B,C,CAEA;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAA3C;;AACA,IAAIC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAEA;;;AAGA;;;AACA,IAAIG,OAAO,GAAG,EAAd,C,CACA;;AACA,IAAIC,OAAO,GAAG,EAAd;AAEA;;;;AAGA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,SAAOC,MAAM,CAACD,GAAD,CAAN,CAAYE,OAAZ,CAAoB,IAApB,EAA0B,OAA1B,EAAmCA,OAAnC,CAA2C,IAA3C,EAAiD,MAAjD,EACYA,OADZ,CACoB,IADpB,EAC0B,MAD1B,EACkCA,OADlC,CAC0C,IAD1C,EACgD,QADhD,CAAP;AAEH;AAED;;;SACeC,W;;EAMf;;;;yEANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBC,KAAK,CAAC,gCAAD,CAD9B;;AAAA;AACQC,YAAAA,QADR;AAAA;AAAA,mBAEqBA,QAAQ,CAACC,IAAT,EAFrB;;AAAA;AAEQC,YAAAA,IAFR;AAGEC,YAAAA,OAAO,CAACC,GAAR,WAAeF,IAAI,CAACG,OAApB;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOA,IAAMC,YAAY,GAAG,CAArB;;AACA,IAAIC,cAAc,sBAAOC,KAAK,CAACF,YAAD,CAAL,CAAoBG,IAApB,EAAP,CAAlB;;AACA,IAAIC,OAAO,GAAG,CAAd;AAEA;;;;AAGA,IAAIpB,MAAM,GAAGC,IAAI,CAACoB,YAAL,CAAkB,UAASC,OAAT,EAAkBZ,QAAlB,EAA4B,CACvD;AACH,CAFY,CAAb;AAGAV,MAAM,CAACuB,MAAP,CAAc1B,oBAAd,EAAoC,YAAW;AAC3CgB,EAAAA,OAAO,CAACC,GAAR,CAAa,IAAIU,IAAJ,EAAD,GAAe,+BAAf,GAAiD3B,oBAA7D;AACH,CAFD;AAIA;;;;AAGA,IAAI4B,QAAQ,GAAG,IAAI3B,eAAJ,CAAoB;AAC/B;AACA;AACA4B,EAAAA,UAAU,EAAE1B;AAHmB,CAApB,CAAf,C,CAMA;AACA;;AACAyB,QAAQ,CAACE,EAAT,CAAY,SAAZ,EAAuB,UAASL,OAAT,EAAkB;AACrCT,EAAAA,OAAO,CAACC,GAAR,CAAa,IAAIU,IAAJ,EAAD,GAAe,0BAAf,GAA4CF,OAAO,CAACM,MAApD,GAA6D,GAAzE,EADqC,CAGrC;AACA;AACA;;AACA,MAAIC,UAAU,GAAGP,OAAO,CAACQ,MAAR,CAAe,IAAf,EAAqBR,OAAO,CAACM,MAA7B,CAAjB,CANqC,CAOrC;;AACA,MAAIG,KAAK,GAAG5B,OAAO,CAAC6B,IAAR,CAAaH,UAAb,IAA2B,CAAvC;AACA,MAAII,QAAQ,GAAG,KAAf;AACA,MAAIC,UAAU,GAAG,KAAjB;AAEF,MAAIC,QAAQ,GAAG,gDAAf,CAZuC,CAavC;;AAEEtB,EAAAA,OAAO,CAACC,GAAR,CAAa,IAAIU,IAAJ,EAAD,GAAe,uBAA3B,EAfqC,CAiBrC;;AACA,MAAItB,OAAO,CAACkC,MAAR,GAAiB,CAArB,EAAwB;AACpBP,IAAAA,UAAU,CAACQ,OAAX,CAAmBC,IAAI,CAACC,SAAL,CAAgB;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmB5B,MAAAA,IAAI,EAAEV;AAAzB,KAAhB,CAAnB;AACH,GApBoC,CAsBrC;;;AACA2B,EAAAA,UAAU,CAACF,EAAX,CAAc,SAAd,EAAyB,UAASc,OAAT,EAAkB;AACvC,QAAIA,OAAO,CAACD,IAAR,KAAiB,MAArB,EAA6B;AAAE;AAC3B,UAAIP,QAAQ,KAAK,KAAjB,EAAwB;AAAE;AACtB;AACAA,QAAAA,QAAQ,GAAG7B,YAAY,CAACqC,OAAO,CAACC,QAAT,CAAvB,CAFoB,CAGpB;;AACAR,QAAAA,UAAU,GAAGjB,cAAc,CAAC0B,KAAf,EAAb;AACAd,QAAAA,UAAU,CAACQ,OAAX,CAAmBC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAC,QAAP;AAAiB5B,UAAAA,IAAI,EAAEsB;AAAvB,SAAf,CAAnB;AACArB,QAAAA,OAAO,CAACC,GAAR,CAAa,IAAIU,IAAJ,EAAD,GAAe,qBAAf,GAAuCS,QAAvC,GACE,qBADF,GAC0BC,UADtC,EANoB,CAU7B;;AACA,YAAI/B,OAAO,CAACiC,MAAR,KAAmBpB,YAAvB,EAAqC;AAC5B,eAAK,IAAI4B,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGzC,OAAO,CAACiC,MAA1B,EAAkCQ,CAAC,EAAnC,EAAuC;AACrCzC,YAAAA,OAAO,CAACyC,CAAD,CAAP,CAAWP,OAAX,CAAmBC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,IAAI,EAAC,gBAAP;AAAyB5B,cAAAA,IAAI,EAAEuB;AAA/B,aAAf,CAAnB;AACD;;AACDtB,UAAAA,OAAO,CAACC,GAAR,CAAa,IAAIU,IAAJ,EAAD,GAAe,8BAAf,GAAgDS,QAAhD,GACE,qBADF,GAC0BC,UADtC;AAER;AAEK,OAnBD,MAmBO;AAAE;AACLrB,QAAAA,OAAO,CAACC,GAAR,CAAa,IAAIU,IAAJ,EAAD,GAAe,yBAAf,GACES,QADF,GACa,IADb,GACoBQ,OAAO,CAACC,QADxC;AAIA,YAAIG,cAAc,GAAGC,QAAQ,CAAC1C,YAAY,CAACqC,OAAO,CAACC,QAAT,CAAb,CAA7B,CALG,CAOH;;AACA,YAAIK,GAAG,GAAG;AACNC,UAAAA,IAAI,EAAG,IAAIxB,IAAJ,EAAD,CAAayB,OAAb,EADA;AAENJ,UAAAA,cAAc,EAAEA,cAFV;AAGNK,UAAAA,MAAM,EAAEjB,QAHF;AAINkB,UAAAA,MAAM,EAAEjB;AAJF,SAAV;AAMAhC,QAAAA,OAAO,CAAC8B,IAAR,CAAae,GAAb;AACA7C,QAAAA,OAAO,GAAGA,OAAO,CAACkD,KAAR,CAAc,CAAC,GAAf,CAAV,CAfG,CAiBH;;AACA,YAAIzC,IAAI,GAAG2B,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAC,SAAP;AAAkB5B,UAAAA,IAAI,EAAEmC;AAAxB,SAAf,CAAX;;AACA,aAAK,IAAIH,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGzC,OAAO,CAACiC,MAA1B,EAAkCQ,CAAC,EAAnC,EAAuC;AACnCzC,UAAAA,OAAO,CAACyC,CAAD,CAAP,CAAWP,OAAX,CAAmB1B,IAAnB;AACH,SArBE,CAuBH;;;AACA,YAAIkC,cAAc,GAAGV,QAAQ,CAACC,MAA9B,EAAsC;AACpC,eAAK,IAAIQ,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGzC,OAAO,CAACiC,MAA1B,EAAkCQ,CAAC,EAAnC,EAAuC;AACrCzC,YAAAA,OAAO,CAACyC,CAAD,CAAP,CAAWP,OAAX,CAAmBC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,IAAI,EAAC,aAAP;AAAsB5B,cAAAA,IAAI,EAAE;AAAC,0BAAUsB;AAAX;AAA5B,aAAf,CAAnB;AACD;AACF;AACJ;AACJ;AACJ,GApDD,EAvBqC,CA6ErC;;AACAL,EAAAA,UAAU,CAACF,EAAX,CAAc,OAAd,EAAuB,UAASE,UAAT,EAAqB;AACxC,QAAII,QAAQ,KAAK,KAAb,IAAsBC,UAAU,KAAK,KAAzC,EAAgD;AAC5CrB,MAAAA,OAAO,CAACC,GAAR,CAAa,IAAIU,IAAJ,EAAD,GAAe,QAAf,GACNK,UAAU,CAACwB,aADL,GACqB,gBADjC,EAD4C,CAG5C;;AACAlD,MAAAA,OAAO,CAACmD,MAAR,CAAevB,KAAf,EAAsB,CAAtB,EAJ4C,CAK5C;;AACAd,MAAAA,cAAc,CAACe,IAAf,CAAoBE,UAApB;AACH;AACJ,GATD;AAWH,CAzFD",
      "sourceRoot": "/Users/llloyola/Desktop/Universidad/Disenﾌバ Avanzado Web/RxJS-Typing-Contest/",
      "sourcesContent": [
        "/* API IDEAS */\n\n/* \n  - Conectarse al sistema - Servidor asigna numero de jugador\n  - Consultar estado juego - # jugadores conectados [GET] /get-game-status\n\t- Obtener el estado de \"avance\" de los jugadores [GET] /get-states\n\t\t\t[{\"player\": int, \"value\": int}, ...]\n\t- Jugador envﾃｭa su avance cada cierta cantidad de palabras [POST] /set-state\n\t\t\t{\"player\": int, \"value\": int}\n  - \n*/\n\n/*\n\t-Usar alguna API gratuita de quotes\n*/\n\n\"use strict\";\n\n// Optional. You will see this name in eg. 'ps' or 'top' command\nprocess.title = 'node-chat';\n\n// Port where we'll run the websocket server\nvar webSocketsServerPort = 1338;\n\n// websocket and http servers\nvar webSocketServer = require('websocket').server;\nvar http = require('http');\n\n/**\n * Global variables\n */\n// latest 100 messages\nvar history = [ ];\n// list of currently connected clients (users)\nvar clients = [ ];\n\n/**\n * Helper function for escaping input strings\n */\nfunction htmlEntities(str) {\n    return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\n                      .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/* API Function */\nasync function randomQuote() {\n  const response = await fetch('https://api.quotable.io/random');\n  const data = await response.json();\n  console.log(`${data.content}`);\n}\n\n// Array with some colors\nconst PLAYER_COUNT = 2;\nvar playersNumbers = [...Array(PLAYER_COUNT).keys()];\nvar pointer = 0;\n\n/**\n * HTTP server\n */\nvar server = http.createServer(function(request, response) {\n    // Not important for us. We're writing WebSocket server, not HTTP server\n});\nserver.listen(webSocketsServerPort, function() {\n    console.log((new Date()) + \" Server is listening on port \" + webSocketsServerPort);\n});\n\n/**\n * WebSocket server\n */\nvar wsServer = new webSocketServer({\n    // WebSocket server is tied to a HTTP server. WebSocket request is just\n    // an enhanced HTTP request. For more info http://tools.ietf.org/html/rfc6455#page-6\n    httpServer: server\n});\n\n// This callback function is called every time someone\n// tries to connect to the WebSocket server\nwsServer.on('request', function(request) {\n    console.log((new Date()) + ' Connection from origin ' + request.origin + '.');\n\n    // accept connection - you should check 'request.origin' to make sure that\n    // client is connecting from your website\n    // (http://en.wikipedia.org/wiki/Same_origin_policy)\n    var connection = request.accept(null, request.origin); \n    // we need to know client index to remove them on 'close' event\n    var index = clients.push(connection) - 1;\n    var userName = false;\n    var userPlayer = false;\n\n\t\tlet sentence = \"Apuesto a que nunca has visto a un burro volar\";\n\t\t// let sentence = await randomQuote();\n\n    console.log((new Date()) + ' Connection accepted.');\n\n    // send back chat history\n    if (history.length > 0) {\n        connection.sendUTF(JSON.stringify( { type: 'history', data: history} ));\n    }\n\n    // user sent some message\n    connection.on('message', function(message) {\n        if (message.type === 'utf8') { // accept only text\n            if (userName === false) { // first message sent by user is their name\n                // remember user name\n                userName = htmlEntities(message.utf8Data);\n                // get the next player number and send it back to the user\n                userPlayer = playersNumbers.shift();\n                connection.sendUTF(JSON.stringify({ type:'player', data: userPlayer }));\n                console.log((new Date()) + ' User is known as: ' + userName\n                            + ' with player number' + userPlayer)\n\n\n\t\t\t\t\t\t\t// If all players are connected send \"start game\" message\n\t\t\t\t\t\t\tif (clients.length === PLAYER_COUNT) {\n                for (var i=0; i < clients.length; i++) {\n                  clients[i].sendUTF(JSON.stringify({ type:'game-beginning', data: sentence }));\n                }\n                console.log((new Date()) + ' A match is about to start! ' + userName\n                            + ' with player number' + userPlayer)\n\t\t\t\t\t\t\t}\n\n            } else { // log and broadcast the message\n                console.log((new Date()) + ' Received Message from '\n                            + userName + ': ' + message.utf8Data);\n                \n\n                var playerProgress = parseInt(htmlEntities(message.utf8Data));\n\n                // we want to keep history of all sent messages\n                var obj = {\n                    time: (new Date()).getTime(),\n                    playerProgress: playerProgress,\n                    author: userName,\n                    player: userPlayer\n                };\n                history.push(obj);\n                history = history.slice(-100);\n\n                // broadcast message to all connected clients\n                var json = JSON.stringify({ type:'message', data: obj });\n                for (var i=0; i < clients.length; i++) {\n                    clients[i].sendUTF(json);\n                }\n\n                // if player progress exceeds sentence length end game\n                if (playerProgress > sentence.length) {\n                  for (var i=0; i < clients.length; i++) {\n                    clients[i].sendUTF(JSON.stringify({ type:'game-ending', data: {\"player\": userPlayer} }));\n                  }\n                }\n            }\n        }\n    });\n\n    // user disconnected\n    connection.on('close', function(connection) {\n        if (userName !== false && userPlayer !== false) {\n            console.log((new Date()) + \" Peer \"\n                + connection.remoteAddress + \" disconnected.\");\n            // remove user from the list of connected clients\n            clients.splice(index, 1);\n            // push back user's number to be reused by another user\n            playersNumbers.push(userPlayer);\n        }\n    });\n\n});\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586577573437
  }
}